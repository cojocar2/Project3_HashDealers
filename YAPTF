import socket
import requests
import subprocess
import robotparser

def amazingMenu():
    """ Display an amazing Banner and the Menu for the tool to instantly impress the users."""
    print (30 * '-')
    print ("   M A I N - M E N U")
    print (30 * '-')
    print ("1. scanport")
    print ("2. crackHouse")
    print ("3. listRestricted")
    print ("4. identifyOUI")
    print ("5. generateReport")
    print (30 * '-')

    choice = input('Enter your choice [1-5] : ')

    choice = int(choice)
    if choice == 1:
        print ("Starting scanport...")
        scanport()
    elif choice == 2:
        print ("Starting crackHouse...")
        crackHouse()
    elif choice == 3:
        print ("Starting listRestricted...")
        listRestricted()
    elif choice == 4:
        print ("Starting indentifyOUI...")
        identifyOUI()
    elif choice == 5:
        print ("Starting generateReport...")
        generateReport()
    else:
        print ("Invalid number. Try again...")
    print ('YAPTF: by DiamondHouse inc.')

host = " "
port = " "

def scanport(host, port):
    """Attempt to connect to a port on a host to see if it is open
    :param host: Host IP to scan
    :param port: Port to scan
    """
    host = raw_input("Enter the IP you would like to scan: ")
    port = input("and which port would you like to scan? ")
    s = socket.socket()
    s.settimeout(5)
    try:
        s.connect((host, port))
        print s.getsockname()
    except socket.error:
        s.close()
        return "Port "+str(port)+" is closed."
    s.close()
    return "Port "+str(port)+" is open!"

printer = scanport(host, port)
print(printer)


def identifyOUI():
    macaddress = raw_input("Search MAC address: ")
    #"""This function should identify the manufacturer of a given device based on its MAC adress"""
    # Load the Wireshark manufacturers database file from the disk and  search through it to return the manufacturer
    
    database = open("data.txt", "r")
    for line in database:
        if macaddress in line: print line
    database.close()
    identifyOUI()
